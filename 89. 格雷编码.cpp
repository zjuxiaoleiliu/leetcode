题目描述:

格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。

给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。格雷编码序列必须以 0 开头。

示例 1:

输入: 2
输出: [0,1,3,2]
解释:
00 - 0
01 - 1
11 - 3
10 - 2

对于给定的 n，其格雷编码序列并不唯一。
例如，[0,2,3,1] 也是一个有效的格雷编码序列。

00 - 0
10 - 2
11 - 3
01 - 1
示例 2:

输入: 0
输出: [0]
解释: 我们定义格雷编码序列必须以 0 开头。
     给定编码总位数为 n 的格雷编码序列，其长度为 2^n。当 n = 0 时，长度为 2^0 = 1。
     因此，当 n = 0 时，其格雷编码序列为 [0]。

//这道问题关键的一点是关于递推公式的寻找，顺着这个思路下去就能找到突破点
//从右边低位开始，把低位的所有格雷码排序写出来，高位保持不动，低位排完后(低位已不能产生
//新的变化了，再启动一位高位)，再扩展到下一个高位，每一轮扩展一位
class Solution {
public:
    vector<int> grayCode(int n) {

    	vector<int> ret;
    	ret.push_back(0);
    	if(n == 0)
    		return ret;
    	ret.push_back(1);
    	for(int i = 1;i < n;i++)
    	{
    		int size = ret.size();
    		for(int j = size-1;j>=0;j--)
    		{
    			int temp = ret[j] | (1<<i);
    			ret.push_back(temp);
    		}
    	}
    	return ret;        
    }
};



